/**
 * Generated by @openapi-codegen
 *
 * @version 1.0.0
 */
export type DifficultyLevelRequestDto = {
  difficulty?: "EASY" | "MEDIUM" | "HARD";
};

export type QuestionRateResponseDto = {
  /**
   * @format int64
   */
  questionId?: number;
  /**
   * @format int64
   */
  easyCount?: number;
  /**
   * @format int64
   */
  mediumCount?: number;
  /**
   * @format int64
   */
  hardCount?: number;
  /**
   * @format int64
   */
  totalCount?: number;
};

export type ExperienceLevel = "BEGINNER" | "INTERMEDIATE" | "ADVANCED";

export type NewTag = {
  name: string;
  description: string;
};

export type TagType =
  | "PROGRAMMING_LANGUAGE"
  | "PROGRAMMING_PARADIGM"
  | "COMPUTER_SCIENCE_TERM"
  | "SOFTWARE_LIBRARY"
  | "USER_DEFINED";

export type UserRegistration = {
  username: string;
  /**
   * @format email
   */
  email: string;
  password: string;
  firstName: string;
  lastName: string;
  country: string;
  experienceLevel: ExperienceLevel;
};

export type UserLogin = {
  usernameOrEmail: string;
  password: string;
};

export type AuthToken = {
  token?: string;
};

/**
 * @example {"id":1,"username":"john_doe","email":"john@doe.com","firstName":"John","lastName":"Doe","bio":"I am a software engineer.","country":"USA","reputationPoints":100,"followersCount":100,"followingCount":100,"selfFollowing":false,"questionCount":100,"answerCount":100,"questions":[{"$ref":"#/components/schemas/QuestionSummary/examples/0"}],"answers":[{"$ref":"#/components/schemas/AnswerDetails/examples/0"}]}
 */
export type UserProfile = {
  id?: number;
  username?: string;
  email?: string;
  firstName?: string;
  lastName?: string;
  bio?: string;
  country?: string;
  reputationPoints?: number;
  followersCount?: number;
  followingCount?: number;
  selfFollowing?: boolean;
  questionCount?: number;
  experienceLevel?: ExperienceLevel;
  answerCount?: number;
  answers?: AnswerDetails[];
  questions?: QuestionSummary[];
  followedTags?: TagSummary[];
};

export type UserProfileUpdate = {
  bio?: string;
  country?: string;
  experienceLevel?: ExperienceLevel;
};

/**
 * @example {"id":1,"username":"john_doe","reputationPoints":100,"profilePicture":"https://placehold.co/640x640","name":"John Doe"}
 */
export type UserSummary = {
  id: number;
  username: string;
  reputationPoints: number;
  /**
   * @format url
   */
  profilePicture: string;
  name: string;
};

export type DifficultyLevel = "EASY" | "MEDIUM" | "HARD";

export type NewQuestion = {
  title: string;
  content: string;
  tagIds?: number[];
  difficulty: DifficultyLevel;
};

export type UpdateQuestion = {
  title?: string;
  content?: string;
  tags?: string[];
};

/**
 * @example {"id":1,"title":"What is the best way to learn programming?","content":"I want to learn programming, but I don't know where to start. What is the best way to learn programming?","author":{"$ref":"#/components/schemas/UserSummary/examples/0"},"createdAt":"2024-01-01T00:00:00Z","updatedAt":"2024-01-01T00:00:00Z","tags":[{"$ref":"#/components/schemas/TagSummary/examples/0"}],"likeCount":10,"dislikeCount":2,"commentCount":2,"viewCount":100,"bookmarked":false,"selfVoted":0,"selfDifficultyVote":false,"easyCount":10,"mediumCount":10,"hardCount":10,"difficulty":"EASY"}
 */
export type QuestionDetails = {
  id: number;
  title: string;
  content: string;
  author: UserSummary;
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
  tags: TagSummary[];
  likeCount: number;
  dislikeCount: number;
  commentCount: number;
  viewCount?: number;
  bookmarked: boolean;
  /**
   * @minimum -1
   * @maximum 1
   */
  selfVoted: number;
  selfDifficultyVote: DifficultyLevel;
  easyCount: number;
  mediumCount: number;
  hardCount: number;
};

/**
 * @example {"id":1,"title":"What is the best way to learn programming?","content":"I want to learn programming, but I don't know where to start. What is the best way to learn programming?","author":{"$ref":"#/components/schemas/UserSummary/examples/0"},"createdAt":"2024-01-01T00:00:00Z","tags":[{"$ref":"#/components/schemas/TagSummary/examples/0"}],"likeCount":10,"dislikeCount":2,"answerCount":2,"viewCount":100}
 */
export type QuestionSummary = {
  id: number;
  title: string;
  content?: string;
  author?: UserSummary;
  /**
   * @format date-time
   */
  createdAt: string;
  difficulty: DifficultyLevel;
  tags: TagSummary[];
  likeCount: number;
  commentCount: number;
  viewCount?: number;
};

export type NewAnswer = {
  content: string;
};

export type UpdateAnswer = {
  content?: string;
};

/**
 * @example {"id":1,"content":"To sort an array in Python, you have several options depending on your specific needs. The most common and straightforward method is to use the built-in `sort()` method for lists or the `sorted()` function for any iterable.\n1. Using the `sort()` method: The `sort()` method modifies the original list in-place, which means it doesn't create a new list but changes the order of elements in the existing list.\n```python3-exec\nmy_list = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]\nmy_list.sort()\nprint(my_list)\n```","author":{"$ref":"#/components/schemas/UserSummary/examples/0"},"createdAt":"2024-01-01T00:00:00Z","updatedAt":"2024-01-01T00:00:00Z","rating":10,"selfVoted":0,"question":{"$ref":"#/components/schemas/QuestionSummary/examples/0"}}
 */
export type AnswerDetails = {
  id: number;
  content: string;
  author: UserSummary;
  /**
   * @format date-time
   */
  createdAt: string;
  /**
   * @format date-time
   */
  updatedAt: string;
  rating: number;
  /**
   * @minimum -1
   * @maximum 1
   */
  selfVoted?: number;
  upvoteCount?: number;
  downvoteCount?: number;
  question: QuestionSummary;
};

/**
 * @example {"tagId":"python","name":"Python","description":"Python is a programming language.","questionCount":100,"followersCount":1000,"following":false,"photo":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/220px-Python-logo-notext.svg.png","authors":["Guido van Rossum"],"inceptionYear":"1991","fileExtension":".py","officialWebsite":"https://www.python.org","stackExchangeTag":"python"}
 * @example {"tagId":"java","name":"Java","type":"PROGRAMMING_LANGUAGE","description":"Java is a class-based, object-oriented programming language.","questionCount":200,"followersCount":800,"following":true,"photo":"https://upload.wikimedia.org/wikipedia/en/thumb/3/30/Java_programming_language_logo.svg/182px-Java_programming_language_logo.svg.png","authors":["James Gosling"],"inceptionYear":"1995","fileExtension":".java","officialWebsite":"https://www.java.com","stackExchangeTag":"java"}
 * @example {"tagId":"react","name":"React","type":"SOFTWARE_LIBRARY","description":"React is a JavaScript library for building user interfaces.","questionCount":150,"followersCount":600,"following":false,"photo":"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/180px-React-icon.svg.png","officialWebsite":"https://reactjs.org","stackExchangeTag":"reactjs"}
 * @example {"tagId":"oop","name":"Object-Oriented Programming","type":"PROGRAMMING_PARADIGM","description":"OOP is a programming paradigm based on objects containing data and code.","questionCount":80,"followersCount":400,"following":true,"photo":"https://example.com/oop-icon.png","stackExchangeTag":"oop"}
 */
export type TagDetails = {
  tagId: string;
  name: string;
  tagType?: TagType;
  description: string;
  questionCount?: number;
  followerCount?: number;
  following?: boolean;
  highlightedQuestions?: QuestionSummary[];
  /**
   * For Programming Language tags
   *
   * @format url
   */
  logoImage: string;
  /**
   * For Programming Language tags
   */
  author?: string;
  /**
   * For Programming Language tags
   */
  inceptionYear?: string;
  /**
   * For Programming Language tags
   */
  fileExtension?: string;
  /**
   * For Programming Language tags
   *
   * @format url
   */
  officialWebsite: string;
  /**
   * Available for Programming Language, Programming Paradigm and Computer Science Term tags
   */
  stackExchangeTag?: string;
  relatedQuestions?: QuestionSummary[];
};

/**
 * @example {"tagId":"python","name":"Python","questionCount":100,"photo":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Python-logo-notext.svg/220px-Python-logo-notext.svg.png"}
 */
export type TagSummary = {
  id?: string;
  name?: string;
  tagType?: TagType;
  questionCount?: number;
  /**
   * @format url
   */
  photo?: string;
};

/**
 * @examples null
 */
export type Profile = {
  id?: number;
  username?: string;
  bio?: string;
  reputationPoints?: number;
  followersCount?: number;
  followingCount?: number;
  selfFollowing?: boolean;
  questionCount?: number;
  questions?: QuestionSummary[];
  answerCount?: number;
  answers?: AnswerDetails[];
  tags?: TagSummary[];
};

export type UpdateProfile = {
  bio?: string;
  tags?: string[];
};

export type CodeExecution = {
  /**
   * The code snippet to be executed
   */
  code: string;
  /**
   * The programming language of the code snippet
   */
  language: "c" | "csharp" | "cpp" | "go" | "java" | "javascript" | "python3";
  /**
   * Optional input for the code execution
   */
  input?: string;
};

/**
 * @example {"status":"success","output":"[1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9]\n","executionTime":15}
 */
export type ExecutionResult = {
  /**
   * The standard output of the code execution
   */
  output?: string;
  /**
   * Any error messages or standard error output
   */
  errors?: string;
  /**
   * The time taken to execute the code in milliseconds
   */
  executionTime?: number;
  /**
   * The status of the code execution
   */
  status?: "success" | "error" | "timeout";
};

/**
 * Error
 */
export type Error = {
  errorMessage?: string;
  stackTrace?: string;
};

/**
 * OK
 */
export type SuccessResponseObject = {
  /**
   * Internal status code of the response. An HTTP 200 response with an internal 500 status code is an error response. Prioritize the inner status over the HTTP status.
   *
   * @example 200
   * @example 201
   */
  status: 200 | 201;
  data: Record<string, any> | any[];
};

/**
 * Response with errors
 */
export type ErrorResponseObject = {
  /**
   * Internal status code of the response. An HTTP 200 response with an internal 500 status code is an error response. Prioritize the inner status over the HTTP status.
   *
   * @example 400
   * @example 401
   * @example 403
   * @example 404
   * @example 409
   * @example 500
   */
  status: 400 | 401 | 403 | 404 | 409 | 500;
  error?: Error;
};
