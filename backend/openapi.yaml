openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users/{id}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseUserProfileResponseDto"
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileUpdateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseUserProfileResponseDto"
  /users/{id}/follow:
    post:
      tags:
      - user-controller
      operationId: followUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseUserProfileResponseDto"
  /tags:
    post:
      tags:
      - tag-controller
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseGetTagDetailsResponseDto"
  /questions:
    post:
      tags:
      - question-controller
      operationId: createQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateQuestionRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseCreateQuestionResponseDto"
  /questions/{questionId}/bookmarks:
    post:
      tags:
      - bookmark-controller
      operationId: bookmarkQuestion
      parameters:
      - name: questionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseBookmarkQuestionResponseDto"
  /questions/{id}/upvote:
    post:
      tags:
      - vote-controller
      operationId: upvoteQuestion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseQuestionUpvoteResponseDto"
  /questions/{id}/downvote:
    post:
      tags:
      - vote-controller
      operationId: downvoteQuestion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseQuestionDownvoteResponseDto"
  /execute-code:
    post:
      tags:
      - code-execution-controller
      operationId: executeCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeExecutionRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseCodeExecutionResponseDTO"
  /auth/signup:
    post:
      tags:
      - authentication-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseSignupResponseDto"
  /auth/login:
    post:
      tags:
      - authentication-controller
      operationId: signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigninRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseSigninResponseDto"
  /users/{id}/followers:
    get:
      tags:
      - user-controller
      operationId: getFollowers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseListUserSummaryDto"
  /users/me:
    get:
      tags:
      - user-controller
      operationId: getUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseSelfProfileResponseDto"
  /test:
    get:
      tags:
      - test-controller
      operationId: test
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /tags/{id}:
    get:
      tags:
      - tag-controller
      operationId: getTagDetails
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseGetTagDetailsResponseDto"
  /users/{id}/unfollow:
    delete:
      tags:
      - user-controller
      operationId: unfollowUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseUserProfileResponseDto"
  /questions/{id}/deleteUpvote:
    delete:
      tags:
      - vote-controller
      operationId: removeUpvote
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseQuestionDeleteUpvoteResponseDto"
  /questions/{id}/deleteDownvote:
    delete:
      tags:
      - vote-controller
      operationId: removeDownvote
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GenericApiResponseQuestionDeleteDownvoteResponseDto"
components:
  schemas:
    UserProfileUpdateRequestDto:
      type: object
      properties:
        bio:
          type: string
        country:
          type: string
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
        stackTrace:
          type: string
    GenericApiResponseUserProfileResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/UserProfileResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    UserProfileResponseDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        bio:
          type: string
        country:
          type: string
        answerCount:
          type: integer
          format: int64
        followersCount:
          type: integer
          format: int32
        followingCount:
          type: integer
          format: int32
        selfFollowing:
          type: boolean
        reputationPoints:
          type: integer
          format: int32
    CreateTagRequestDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    GenericApiResponseGetTagDetailsResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/GetTagDetailsResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    GetTagDetailsResponseDto:
      type: object
      properties:
        tagId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        questionCount:
          type: integer
          format: int64
        followerCount:
          type: integer
          format: int64
        following:
          type: boolean
        tagType:
          type: string
    CreateQuestionRequestDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        tagIds:
          type: array
          items:
            type: integer
            format: int64
    AuthorDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        reputationPoints:
          type: integer
          format: int64
        profilePicture:
          type: string
        name:
          type: string
    CreateQuestionResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        author:
          $ref: "#/components/schemas/AuthorDto"
        createdAt:
          type: string
        updatedAt:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagDto"
        upvoteCount:
          type: integer
          format: int64
        downvoteCount:
          type: integer
          format: int64
    GenericApiResponseCreateQuestionResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/CreateQuestionResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    TagDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    BookmarkQuestionResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        upvoteCount:
          type: integer
          format: int64
        downvoteCount:
          type: integer
          format: int64
    GenericApiResponseBookmarkQuestionResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/BookmarkQuestionResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    GenericApiResponseQuestionUpvoteResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/QuestionUpvoteResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    QuestionUpvoteResponseDto:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        upvoteCount:
          type: integer
          format: int64
    GenericApiResponseQuestionDownvoteResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/QuestionDownvoteResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    QuestionDownvoteResponseDto:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        downvoteCount:
          type: integer
          format: int64
    CodeExecutionRequestDto:
      type: object
      properties:
        code:
          type: string
        language:
          type: string
        input:
          type: string
    CodeExecutionResponseDTO:
      type: object
      properties:
        status:
          type: string
        output:
          type: string
        executionTime:
          type: number
          format: double
    GenericApiResponseCodeExecutionResponseDTO:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/CodeExecutionResponseDTO"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    SignupRequestDto:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        country:
          type: string
    GenericApiResponseSignupResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/SignupResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    SignupResponseDto:
      type: object
      properties:
        token:
          type: string
    SigninRequestDto:
      type: object
      properties:
        usernameOrEmail:
          type: string
        password:
          type: string
    GenericApiResponseSigninResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/SigninResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    SigninResponseDto:
      type: object
      properties:
        token:
          type: string
    GenericApiResponseListUserSummaryDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/UserSummaryDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    UserSummaryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        reputationPoints:
          type: integer
          format: int32
    GenericApiResponseSelfProfileResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/SelfProfileResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    SelfProfileResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        bio:
          type: string
        country:
          type: string
        answerCount:
          type: integer
          format: int64
        followersCount:
          type: integer
          format: int32
        followingCount:
          type: integer
          format: int32
        reputationPoints:
          type: integer
          format: int32
    GenericApiResponseQuestionDeleteUpvoteResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/QuestionDeleteUpvoteResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    QuestionDeleteUpvoteResponseDto:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        upvoteCount:
          type: integer
          format: int64
        downvoteCount:
          type: integer
          format: int64
    GenericApiResponseQuestionDeleteDownvoteResponseDto:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          $ref: "#/components/schemas/QuestionDeleteDownvoteResponseDto"
        error:
          $ref: "#/components/schemas/ErrorResponse"
    QuestionDeleteDownvoteResponseDto:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        upvoteCount:
          type: integer
          format: int64
        downvoteCount:
          type: integer
          format: int64
